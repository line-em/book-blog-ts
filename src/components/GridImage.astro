---
import { getStars } from '../utils/rating'
import { Image } from 'astro:assets'
import { getCollection } from 'astro:content'
import { listAllGenres } from '../utils/genres'

export interface Props {
	year?: number
}

const { year } = Astro.props

let allBooks = await getCollection('books')

if (year) allBooks = await getCollection('books', ({ data }) => Number(data.year) === year)
---

<section class="wrapper img-grid">
	{
		allBooks.map((book) => {
			return (
				<a
					href={`/${book?.slug}`}
					class="flex flex-col bg-white border sm:shadow-sm rounded-xl relative hover:sm:shadow-lg hover:border-purple-300"
				>
					<Image
						src={book && book?.data.image}
						alt={book?.data.title}
						width={300}
						height={350}
						format="webp"
						quality={'high'}
						loading="lazy"
						class="w-full h-auto rounded-t-xl"
					/>
					<aside class="sm:absolute mt-2 sm:mt-0 justify-center sm:-right-3 top-1 z-20 flex gap-1">
						<div class="bg-zinc-400 text-xs text-white px-2 py-1 rounded-md shadow-md">
							{book?.data.year}
						</div>
						<div class="bg-purple-400 text-xs text-white px-2 py-1 rounded-md shadow-md">
							{book?.data?.genre[0]}
						</div>
					</aside>
					<div class="p-2 sm:pb-4 flex flex-col sm:gap-3 w-full flex-1 relative items-center">
						<h3 class="font-bold text-gray-800 sm:line-clamp-2 flex-1">{book?.data.title}</h3>
						<span
							set:html={getStars(book?.data.score)}
							class="flex max-w-1/5 justify-center items-center book-grid-rating -mt-2 sm:mt-0"
						/>
					</div>
				</a>
			)
		})
	}
</section>
