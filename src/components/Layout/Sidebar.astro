---
import type { CollectionEntry } from "astro:content";
import ReadingStats from "../../layouts/ReadingStats.astro";
import { getBooks } from "../../utils/getBooks";
import GradientText from "../GradientText.astro";
import Link from "../Link.astro";
import { validYears } from "@/content/config";
import { BookOpenTextIcon } from "@phosphor-icons/react/dist/ssr/BookOpenText";
import { BooksIcon } from "@phosphor-icons/react";

export interface Props {
  currentYear?: number;
  isReview?: boolean;
  bookInfo?: any;
}

const { currentYear, isReview } = Astro.props;

const books: CollectionEntry<"books">[] = currentYear
  ? await getBooks(currentYear)
  : await getBooks();
console.log(currentYear);
---

<aside
  class="p-6 flex gap-6 bg-ctp-rosewater-50/20 rounded-t-xl mb-12 flex-wrap space-between shadow-md"
>
  <h1 class="text-2xl sm:text-4xl lg:text-5xl mb-4 sm:mb-8 flex text-center gap-2 items-center">
    <BooksIcon
    size={32}
    color="var(--catppuccin-color-teal-300)"
    weight="duotone"
  />
    <GradientText text={isReview ? "Review" : currentYear ? `${currentYear}` : "Yearly"} />
    Books
  </h1>
  <div class={"flex gap-2 sm:gap-6 mx-auto flex-wrap"}>
    <Link disabled={currentYear === 0} url={`/index.html`} text={"All Books"} />
    {
      validYears.map((curr: number) => (
        <Link disabled={currentYear === curr} url={`/${Number(curr)}`} text={curr.toString()}>
          <BookOpenTextIcon
            size={24}
            color="var(--catppuccin-color-teal-300)"
            weight="duotone"
            className="hidden sm:flex"
          />
        </Link>
      ))
    }
  </div>
  {!isReview && <ReadingStats books={books} mini={true} />}
</aside>
