---
import Layout from "../layouts/Layout.astro";
import { getAverageStars } from "../utils/rating";
import { getMostReadGenres } from "../utils/genres";
import "../styles/year.styles.css";
import { getBooks } from "../utils/getBooks";
import { yearList } from "../content/yearList";

export interface Props {
	year?: number;
}

const { year } = Astro.props;

let books;

if (year) {
	books = await getBooks(year);
} else {
	books = await getBooks();
}

const averageStars = getAverageStars(books.map((book) => book.data.score));
const mostReadGenres = getMostReadGenres(books);
---

<Layout title="Book List">
	<main class="content-box">
		<header>
			<nav>
				<h1>
					<span class="text-gradient">Book</span>{" "}List {
						year ? `: ${year}` : ""
					}
				</h1>
				<section class="nav-buttons">
					<a
						href=`/index.html`
						}
						class={`button-style ${year ? "" : "inactive"}`}
					>
						All
					</a>
					{
						yearList.map((curr) => (
							<a
								href={`/${Number(curr)}`}
								class={`button-style ${
									curr === Number(year) ? "inactive" : ""
								}`}
							>
								{curr}
							</a>
						))
					}
				</section>
			</nav>

			<h4>
				Books read:
				<strong class="text-gradient">{books.length}</strong> / Most read {
					mostReadGenres.length > 1 ? "genres:" : "genre:"
				}
				<strong class="text-gradient">{mostReadGenres.join(", ")}</strong> / Average
				rating:
				<strong class="text-gradient">{averageStars}</strong>
			</h4>
		</header>
		<slot />
	</main>
</Layout>
