---
import { getCollection, type CollectionEntry } from "astro:content";
import BookReview from "../layouts/BookReview.astro";
import "../styles/bookpage.styles.css";
import BookNav from "../components/BookNav.astro";
import ExtraImages from "../components/ExtraImages.astro";
import Lorem from "../components/Lorem.astro";
import { Image } from "astro:assets";
import Layout from "../layouts/Layout.astro";

export const prerender = false;
import { PAGE_PASSWORD } from '../constants.js';

const password = Astro.url.searchParams.get('password');
const authenticated = password == PAGE_PASSWORD;

if (!authenticated)
	return Astro.redirect("/");

export interface Props {
	entry: CollectionEntry<"books">;
	prev: CollectionEntry<"books"> | null;
	next: CollectionEntry<"books"> | null;
}

export async function getStaticPaths() {
	const bookEntries: { slug: string }[] = await getCollection("books");
	const bookNumber: number = bookEntries.length;

	return bookEntries.map((entry, i: number) => ({
		params: { slug: entry.slug },
		props: {
			entry,
			next: i + 1 === bookNumber ? null : bookEntries[i + 1],
			prev: i === 0 ? null : bookEntries[i - 1]
		}
	}));
}
let { entry, prev, next } = Astro.props;

const { Content } = await entry.render();

let {
	title,
	author,
	month,
	score,
	image,
	heroimage,
	extraimage,
	extraimages,
	year,
	genre
} = entry.data;

let auth = true;
---

<Layout title={title}>
	<BookReview
		score={score}
		year={year}
		month={month}
		genres={genre}
		cover={image}
		title={title}
	>
		<main class="instructions center p-top-base">
			<nav class="m-center">
				{prev && <BookNav slug={prev.slug} type="prev" />}
				{prev && next && <span> | </span>}
				{next && <BookNav slug={next.slug} type="next" />}
			</nav>
			<h1 class="text-gradient">
				{title}
			</h1>
			<h3>by {author}</h3>
			<section class="book-review">
				{
					heroimage && (
						<Image
							src={heroimage[0]}
							alt={title}
							width={1000}
							height={300}
							quality={"mid"}
							class={heroimage[1] === "full" ? "image" : "image right"}
						/>
					)
				}
				{auth ? <Content /> : <Lorem />}
				<ExtraImages
					extraImages={extraimages}
					extraImage={extraimage}
					title={title}
				/>
			</section>
		</main>
	</BookReview>
</Layout>
